/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/* no static exports found */
/* all exports used */
/*!***********************!*\
  !*** ./src/canvas.js ***!
  \***********************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n// Initial Setup\nvar canvas = document.querySelector('canvas');\nvar c = canvas.getContext('2d');\n\ncanvas.width = innerWidth;\ncanvas.height = innerHeight;\n\n// Variables\nvar mouse = {\n  x: innerWidth / 2,\n  y: innerHeight / 2\n};\n\nvar colors = ['#2185C5', '#7ECEFD',\n// '#FFF6E5',\n'#FF7F66'];\n\n// Event Listeners\naddEventListener('mousemove', function (event) {\n  mouse.x = event.clientX;\n  mouse.y = event.clientY;\n});\n\naddEventListener('resize', function () {\n  canvas.width = innerWidth;\n  canvas.height = innerHeight;\n\n  init();\n});\n\n// Utility Functions\nfunction randomIntFromRange(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nfunction randomColor(colors) {\n  return colors[Math.floor(Math.random() * colors.length)];\n}\n\nfunction distance(x1, y1, x2, y2) {\n  var xDist = x2 - x1;\n  var yDist = y2 - y1;\n\n  return Math.sqrt(Math.pow(xDist, 2) + Math.pow(yDist, 2));\n}\n\n/**\n * Rotates coordinate system for velocities\n *\n * Takes velocities and alters them as if the coordinate system they're on was rotated\n *\n * @param  Object | velocity | The velocity of an individual particle\n * @param  Float  | angle    | The angle of collision between two objects in radians\n * @return Object | The altered x and y velocities after the coordinate system has been rotated\n */\n\nfunction rotate(velocity, angle) {\n  var rotatedVelocities = {\n    x: velocity.x * Math.cos(angle) - velocity.y * Math.sin(angle),\n    y: velocity.x * Math.sin(angle) + velocity.y * Math.cos(angle)\n  };\n\n  return rotatedVelocities;\n}\n\n/**\n * Swaps out two colliding particles' x and y velocities after running through\n * an elastic collision reaction equation\n *\n * @param  Object | particle      | A particle object with x and y coordinates, plus velocity\n * @param  Object | otherParticle | A particle object with x and y coordinates, plus velocity\n * @return Null | Does not return a value\n */\n\nfunction resolveCollision(particle, otherParticle) {\n  var xVelocityDiff = particle.velocity.x - otherParticle.velocity.x;\n  var yVelocityDiff = particle.velocity.y - otherParticle.velocity.y;\n\n  var xDist = otherParticle.x - particle.x;\n  var yDist = otherParticle.y - particle.y;\n\n  // Prevent accidental overlap of particles\n  if (xVelocityDiff * xDist + yVelocityDiff * yDist >= 0) {\n\n    // Grab angle between the two colliding particles\n    var angle = -Math.atan2(otherParticle.y - particle.y, otherParticle.x - particle.x);\n\n    // Store mass in var for better readability in collision equation\n    var m1 = particle.mass;\n    var m2 = otherParticle.mass;\n\n    // Velocity before equation\n    var u1 = rotate(particle.velocity, angle);\n    var u2 = rotate(otherParticle.velocity, angle);\n\n    // Velocity after 1d collision equation\n    var v1 = { x: u1.x * (m1 - m2) / (m1 + m2) + u2.x * 2 * m2 / (m1 + m2), y: u1.y };\n    var v2 = { x: u2.x * (m1 - m2) / (m1 + m2) + u1.x * 2 * m2 / (m1 + m2), y: u2.y };\n\n    // Final velocity after rotating axis back to original location\n    var vFinal1 = rotate(v1, -angle);\n    var vFinal2 = rotate(v2, -angle);\n\n    // Swap particle velocities for realistic bounce effect\n    particle.velocity.x = vFinal1.x;\n    particle.velocity.y = vFinal1.y;\n\n    otherParticle.velocity.x = vFinal2.x;\n    otherParticle.velocity.y = vFinal2.y;\n  }\n}\n\n// Objects\nfunction Particle(x, y, radius, color) {\n  this.x = x;\n  this.y = y;\n  this.velocity = {\n    x: (Math.random() - 0.5) * 4,\n    y: (Math.random() - 0.5) * 4\n  };\n  this.radius = radius;\n  this.color = color;\n  this.mass = 1;\n  this.opacity = 0;\n}\n\nParticle.prototype.update = function (particles) {\n  this.draw();\n\n  for (var i = 0; i < particles.length; i++) {\n    // Don't compare any particle to itself\n    if (this === particles[i]) continue;\n    if (distance(this.x, this.y, particles[i].x, particles[i].y) - this.radius * 2 < 0) {\n      resolveCollision(this, particles[i]);\n    }\n  }\n\n  // Bounce off sides\n  if (this.x - this.radius <= 0 || this.x + this.radius >= innerWidth) {\n    this.velocity.x = -this.velocity.x;\n  }\n\n  // Bounce off top/bottom\n  if (this.y - this.radius <= 0 || this.y + this.radius >= innerHeight) {\n    this.velocity.y = -this.velocity.y;\n  }\n\n  // Mouse collision detection - increase opacity if \n  if (distance(mouse.x, mouse.y, this.x, this.y) < 120 && this.opacity < 0.4) {\n    this.opacity += 0.02;\n  } else if (this.opacity > 0) {\n    this.opacity -= 0.02;\n\n    // Prevent from going below 0 (by taking higher of two vals)\n    this.opacity = Math.max(0, this.opacity);\n  }\n\n  this.x += this.velocity.x;\n  this.y += this.velocity.y;\n};\n\nParticle.prototype.draw = function () {\n  c.beginPath();\n  c.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);\n  c.save(); // saves all settings/fills/strokes before and restores it below\n  c.globalAlpha = this.opacity; // sets opacity of entire canvas ? now the particles opacity?\n  c.fillStyle = this.color;\n  c.fill();\n  c.restore();\n  c.strokeStyle = this.color;\n  c.stroke();\n  c.closePath();\n};\n\n// Implementation\nvar particles = void 0;\n\nfunction init() {\n  particles = [];\n\n  for (var i = 0; i < 50; i++) {\n    var radius = 20;\n    var x = randomIntFromRange(radius, canvas.width - radius);\n    var y = randomIntFromRange(radius, canvas.height - radius);\n    var color = randomColor(colors);\n\n    // For every particle after the 1st one\n    if (i !== 0) {\n      for (var j = 0; j < particles.length; j++) {\n        // if it is touching one of the previously generated particles\n        if (distance(x, y, particles[j].x, particles[j].y) - radius * 2 < 0) {\n          x = randomIntFromRange(radius, canvas.width - radius);\n          y = randomIntFromRange(radius, canvas.height - radius);\n\n          // Reset the loop to check again\n          j = -1;\n        }\n      }\n    }\n\n    particles.push(new Particle(x, y, radius, color));\n  }\n}\n\n// Animation Loop\nfunction animate() {\n  requestAnimationFrame(animate);\n  c.clearRect(0, 0, canvas.width, canvas.height);\n  c.fillStyle = 'whitesmoke';\n  c.fillRect(0, 0, canvas.width, canvas.height);\n\n  particles.forEach(function (object) {\n    return object.update(particles);\n  });\n}\n\ninit();\nanimate();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n");

/***/ })
/******/ ]);